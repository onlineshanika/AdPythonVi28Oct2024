Advanced Python Dev
Trainer: Prashant Nair
======================================================================================================================================

Agenda
------

Removal of Hard coded URL
Adding static files (e.g. css)
Working with Nav Bar
Creating a Base Template
Adding Image Field to Model and Template
Creating Forms in Django
	- Add new items
	- Editing existing items
	- Deleting items
Authentication in Django
	- Creating Registration Form
	- Adding Success Message
	- Saving Data from registration form
	- Customizing Registration form
	- Logging in Users
	- Redirect RegisteredUsers
	- Logout Functionality



Lab1: Adding static css file
=====================================================================

1. Create a folder named static in food app with the following structure

	static/food/style.css

style.css

body{
    background-color: lightyellow;
}

2. Update index.html

index.html 

{% load static %}
<html>
<head>
    <link rel="stylesheet" href="{% static 'food/style.css' %}">

<title>Welcome {{ name }}</title>
</head>
<body>

<h1>Extracted Data is </h1>
<ul>
    {% for msg in messages %}
    <li> <a href="{{ msg.id }}">{{ msg.item_name}}</a></li>
    {% endfor %}
</ul>




</body>
</html>


Lab2: Adding base.html and linking with index and detail page
=================================================================

Step1: Create base.html inside templates/food folder


{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <!--
 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


    -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
       <link rel="stylesheet" href="{% static 'food\style.css' %}">

    <title>Test</title>
</head>
<body>
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>


    <nav class="navbar navbar-dark bg-dark">
        <a href="#" class="navbar-brand">Food App</a>

        <div class="navbar">
            <a class="nav-item  nav-link" href="#">Add Item</a>
            <a class="nav-item  nav-link" href="#">Delete Item</a>
            <a class="nav-item  nav-link" href="#">View Item</a>
        </div>
    </nav>

{% block body %}
{% endblock %}

</body>
</html>



Step2: Edit index.html

{% extends 'food/base.html' %}

<html>
<head>
    

<title>Welcome {{ name }}</title>
</head>
<body>

    {% block body %}

<h1>Extracted Data is </h1>
<ul>
    {% for msg in messages %}
    <li> <a href="{{ msg.id }}">{{ msg.item_name}}</a></li>
    {% endfor %}
</ul>

{% endblock %}


</body>
</html>


Step3: Edit detail.html

{% extends 'food/base.html' %}

{% block body %}

<h1>Item ID: {{ itemDetails.pk }}</h1>
<h1>Item Name: {{ itemDetails.item_name }}</h1>
<h1>Item Name: {{ itemDetails.item_desc }}</h1>
<h1>Item Name: {{ itemDetails.item_price }}</h1>
<img src = "{{ itemDetails.item_image}}" />

{% endblock %}


Step4: Check and confirm if navigation bar is visible



Adding Image Field in Existing Table(Model)
============================================

Step1: Delete all extra fields from models.py if applicable and perfrom makemigration

python manage.py makemigrations food
python manage.py migrate

Step2: Add a new field called item_image

from django.db import models

# Create your models here.

class Item(models.Model):

    def __str__(self):
        result = str(self.item_name)
        return result

    item_name = models.CharField(max_length=200)
    item_desc = models.CharField(max_length=200)
    item_price = models.IntegerField()
    item_image = models.CharField(max_length=900, default="https://i.pinimg.com/originals/fd/80/ec/fd80ecec48eba2a9adb76e4133905879.png")
    

Step3: Migrate DB
python manage.py makemigrations food
python manage.py migrate

Step4: Check in Admin page if changes are applied successfully

Step5: Update urls.py in food app

from django.urls import path
from . import views

app_name='food'

urlpatterns=[
    path('',views.index, name="index"),
    path('item',views.item, name="items"),
    path('<int:item_id>',views.detail, name="detail"),
]

Step6: Update index.html

{% extends 'food/base.html' %}

{% block body %}

{% for item in messages %}
        
<div class="row">
    <div class = "col-md-3 offset-md-2">
        <img class="card" height="150px" src="{{ item.item_image }}" />

    </div>
    <div class = "col-md-4">
        <h3>{{ item.item_name }}</h3>
        <h5>{{ item.item_desc }}</h5>
        <h6>${{ item.item_price }}</h6>
    </div>
    <div class = "col-md-2">
        <a href="{% url 'food:detail' item.id %}" class="btn btn-success">Details</a>
        
    </div>


</div>


                
 {% endfor %}

{% endblock %}


Step7: Update details.html

{% extends 'food/base.html' %}

{% block body %}
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <img height=300 src="{{ itemDetails.item_image }}" class="card"/>
        </div>
        <div class="col-md-6">
            <h1>{{ itemDetails.item_name }}</h1>
            <h2>{{ itemDetails.item_desc }}</h2>
            <h3>$ {{ itemDetails.item_price }}</h3>
        </div>
    </div>
</div>

{% endblock %}

Step8: views.py

from django.shortcuts import render
from django.http import HttpResponse
from .models import Item

# Create your views here.

def index(request):
    item = Item.objects.all()
    context = {
           'messages': item
    }
    return render(request, 'food/index.html', context=context)

def item(request):
    return HttpResponse("This is Items Page")

def detail(request,item_id):
    item = Item.objects.get(pk=item_id)
    context = {
        'itemDetails' : item,
    }
    return render(request, 'food/detail.html', context=context)

